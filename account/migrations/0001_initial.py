# Generated by Django 4.0 on 2022-01-08 16:52

from django.db import migrations, models
import django.db.models.deletion
import helpers.functions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_on', models.DateTimeField(default=helpers.functions.get_current_time)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email address')),
                ('user_role', models.CharField(choices=[('normal_user', 'Normal user'), ('business_user', 'Business user'), ('business_staff', 'Business staff'), ('admin', 'Admin')], default='normal_user', max_length=50, verbose_name='User role')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 't_user',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('created_on', models.DateTimeField(default=helpers.functions.get_current_time)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to='account.user')),
                ('full_name', models.CharField(default='', max_length=255, verbose_name='Full name')),
                ('display_name', models.CharField(default='', max_length=128, verbose_name='Display name')),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default=2, max_length=10)),
            ],
            options={
                'db_table': 't_user_profile',
            },
        ),
    ]
